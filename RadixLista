/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package radixlista;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

/**
 *
 * @author marti
 */
public class RadixLista {
 static int getMax(List <Integer> arr, int n) 
    { 
        int mx = arr.get(0); 
        for (int i = 1; i < n; i++) 
            if (arr.get(i) > mx) 
                mx = arr.get(i); 
        return mx; 
    } 
  
    // A function to do counting sort of arr[] according to 
    // the digit represented by exp. 
    static void countSort(List <Integer> arr, int n, int exp) 
    { 
        int output[] = new int[n]; // output array 
        int i; 
        int count[] = new int[10]; 
        Arrays.fill(count, 0); 
  
        // Store count of occurrences in count[] 
        for (i = 0; i < n; i++) 
            count[(arr.get(i) / exp) % 10]++; 
  
        // Change count[i] so that count[i] now contains 
        // actual position of this digit in output[] 
        for (i = 1; i < 10; i++) 
            count[i] += count[i - 1]; 
  
        // Build the output array 
        for (i = n - 1; i >= 0; i--) { 
            output[count[(arr.get(i) / exp) % 10] - 1] = arr.get(i); 
            count[(arr.get(i) / exp) % 10]--; 
        } 
  
        // Copy the output array to arr[], so that arr[] now 
        // contains sorted numbers according to curent digit 
        for (i = 0; i < n; i++)
            arr.set(i, output[i]);
           // arr[i] = output[i]; 
    } 
  
    // The main function to that sorts arr[] of size n using 
    // Radix Sort 
    static void radixsort(List <Integer> arr, int n) 
    { 
        // Find the maximum number to know number of digits 
        int m = getMax(arr, n); 
  
        // Do counting sort for every digit. Note that 
        // instead of passing digit number, exp is passed. 
        // exp is 10^i where i is current digit number 
        for (int exp = 1; m / exp > 0; exp *= 10) 
            countSort(arr, n, exp); 
    } 
  
    // A utility function to print an array 
    static void print(List <Integer> arr, int n) 
    { 
        for( int g: arr){
        System.out.println(g); 
        }
        
            
    } 
  
    /*Driver Code*/
    public static void main(String[] args) 
    { 
             Scanner n= new Scanner(System.in);
       System.out.println("Cuantos numeros desea ingresar");
       int k=n.nextInt();
     
//int a[]={321, 6, 1, 234, 213, 4, 5, 123}; //Este es el array de elementos que vamos a ordenar 
 List<Integer> arr= new ArrayList<Integer>();  

int[] a = new int[k];
  for(int i=0;i<k;i++){
  System.out.println("Ingrese sus datos");
       int p=n.nextInt();
       arr.add(i, p);
  }
   int o = arr.size(); 
       
          // Function Call 
           
        radixsort(arr, o); 
        print(arr, o); 
    } 
}
